package kr.or.ddit.reflection;

import java.lang.reflect.Field;

import kr.or.ddit.reflect.ReflectionTest;

public class ReflectionDesc {
	public static void main(String[] args) {
		Object obj = ReflectionTest.getObject();
		System.out.println(obj);
		
		Class clz = obj.getClass();
		System.out.println(clz);
		Field[] fields = clz.getDeclaredFields();
		
		for(Field tmp : fields) {
			String varName = tmp.getName();
			Class varType = tmp.getType();
			try {
				// 객체의 private 상태를 public 으로 바꿀 수가 있음 (어디에서든 접근 가능하게 할 수 있다)
				tmp.setAccessible(true);
				Object value = tmp.get(obj);
				System.out.printf("%s %s=%s;\n", varType.getSimpleName(), varName, value);
			} catch (IllegalArgumentException | IllegalAccessException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		

		
	}
}
