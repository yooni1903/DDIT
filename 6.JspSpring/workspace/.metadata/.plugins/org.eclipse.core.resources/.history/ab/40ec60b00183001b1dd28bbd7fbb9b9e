package kr.or.ddit.servlet01;
import javax.servlet.http.*;
import javax.servlet.*;
import javax.servlet.annotation.WebServlet;

import java.io.*;

@WebServlet("/01/imageForm.tem1")
public class ImageFormServlet extends HttpServlet{
	
	private ServletContext application;
	
	@Override
	public void init(ServletConfig config) throws ServletException {
		super.init(config);
		application = config.getServletContext();
	}

	protected void doGet(HttpServletRequest req,
                     HttpServletResponse resp)
              throws ServletException,
                     IOException{	
		System.out.println("서블리의 요청 받앗음.");
		
		// img파일 아닌 것은 걸러내고 리스트에 출력하기
		
		resp.setContentType("text/html;charset=utf-8");
		String folder = "d:/contents";
		
		File contents = new File(folder);
		
		
		String[] children = contents.list(new FilenameFilter() {
			
			@Override
			public boolean accept(File dir, String name) {
				String mime = application.getMimeType(name);
				return mime != null && mime.startsWith("image/");
			}
		});
		
		
		// String이 아니라 StringBuffer를 사용하는 이유
		// String 변수는 상수이기 때문에 +=로 계속 값을 더해준다면 상수pool에 점유하는 값들이 무수히 많아진다.
		// 그렇게 되면 하나만 필요로 하는 값들이 메모리를 많이 차지하기 때문에 StringBuffer를 사용해준다.
		
		
		String tmplPath = "/01/imageForm.tem1";
		InputStream is = application.getResourceAsStream(tmplPath);
		InputStreamReader isr = new InputStreamReader(is);
		BufferedReader reader = new BufferedReader(isr);
		String temp = null;
		StringBuffer tmplSrc = new StringBuffer();
		
		while((temp = reader.readLine()) != null) {
			tmplSrc.append(String.format("%s\n", temp));
		}
		
//		for(String child : children){
//			html.append(String.format("<option>%s</option>", child));
//		}
		
		
		StringBuffer html = tmplSrc;
		PrintWriter out = null;
		try {
			out = resp.getWriter();
			out.println(html);
		}finally {
			if(out!=null) out.close();
		}
		
		
	}
						 
}
	
