package kr.or.ddit.servlet08;

import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.or.ddit.db.ConnectionFactory;

@WebServlet("/10/jdbcDesc.do")
public class jdbcDescServlet extends HttpServlet{
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String[] headers = null;
		List<Map<String, Object>> dataList = new ArrayList<>();
		try(
			Connection conn = ConnectionFactory.getConnection();
	// 		out.println(conn);
			Statement stmt = conn.createStatement();
				){
			String sql = "select property_name, property_value, description " 
					+ "from database_properties";
			ResultSet rs = stmt.executeQuery(sql);
			ResultSetMetaData rsmd = rs.getMetaData();
			int count = rsmd.getColumnCount();
			headers =new String[count];
			for(int i = 1; i <= count; i++){
				headers[i-1] = rsmd.getColumnName(i);
			}
			
			
			while(rs.next()){
				Map<String, Object> record = new LinkedHashMap<>();
				for(String colName : headers){
					record.put(colName, rs.getString(colName));
				}
				dataList.add(record);
			}
		}catch(SQLException e) {
			throw new RuntimeException(e);
		}
		req.setAttribute("headers", headers);
		req.setAttribute("dataList", dataList);
		
		String view = "/WEB-INF/views/10/jdbcDesc.jsp";
		req.getRequestDispatcher(view).forward(req, resp);
	}
	
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String[] headers = null;
		List<Map<String, Object>> dataList = new ArrayList<>();
		String properties = req.getParameter("property_name");
		try(
			Connection conn = ConnectionFactory.getConnection();
	// 		out.println(conn);
			Statement stmt = conn.createStatement();
				){
			String sql = "select property_name, property_value, description " 
					+ "from database_properties "
					+ "where property_name like '%"+properties+"%'";
					
			ResultSet rs = stmt.executeQuery(sql);
			ResultSetMetaData rsmd = rs.getMetaData();
			int count = rsmd.getColumnCount();
			headers =new String[count];
			for(int i = 1; i <= count; i++){
				headers[i-1] = rsmd.getColumnName(i);
			}
			
			
			while(rs.next()){
				Map<String, Object> record = new LinkedHashMap<>();
				for(String colName : headers){
					record.put(colName, rs.getString(colName));
				}
				dataList.add(record);
			}
		}catch(SQLException e) {
			throw new RuntimeException(e);
		}
		req.setAttribute("headers", headers);
		req.setAttribute("dataList", dataList);
		
		String view = "/WEB-INF/views/10/jdbcDesc.jsp";
		req.getRequestDispatcher(view).forward(req, resp);
	}
}
