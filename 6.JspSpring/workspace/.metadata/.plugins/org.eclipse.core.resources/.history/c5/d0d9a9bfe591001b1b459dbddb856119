package kr.or.ddit.member.controller;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.member.service.IMemberService;
import kr.or.ddit.member.service.MemberServiceImpl;
import kr.or.ddit.vo.MemberVO;

@WebServlet("/member/memberInsert.do")
public class MemberInsertServlet extends HttpServlet {
	private IMemberService service = new MemberServiceImpl();
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String view = "/WEB-INF/views/member/memberForm.jsp";
		boolean redirect = false;
		// logic
		if(redirect) {
			resp.sendRedirect(req.getContextPath() + view);
		}else {
			req.getRequestDispatcher(view).forward(req, resp);
		}
	}
	
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// 1. 요청 접수
		MemberVO member = new MemberVO();
		req.setAttribute("member", member);
		// 2. 검증(필수 데이터, 데이터의 길이, 데이터의 타입 등등 모든 것을 검증해야함)
		boolean valid = validate(member);
		boolean redirect = false;
		String view = null;
		String message = null;
		if(valid) {
			ServiceResult result = service.createMember(member);
			switch (result) {
			case PKDUPLICATED:
				view = "/WEB-INF/views/member/memberForm.jsp";
				message = "아이디 중복";
				break;
			case OK:
				redirect = true;
				view = "/login/loginForm.jsp";
//				view = "/webStudy01/login/loginForm.jsp";
				break;
			default:
				view = "/WEB-INF/views/member/memberForm.jsp";
				message = "서버 오류, 잠시 후 다시 시도하세요.";
				break;
			}
		}else {
			
		}
		req.setAttribute("message", message);
		
		if(redirect) {
			resp.sendRedirect(req.getContextPath() + view);
		}else {
			req.getRequestDispatcher(view).forward(req, resp);
		}
		
	}
	
	private boolean validate(MemberVO member) {
		boolean valid = true;
		
		
		return valid;
	}
}
