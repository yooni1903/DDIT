package kr.or.ddit.member.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import kr.or.ddit.db.ConnectionFactory;
import kr.or.ddit.vo.MemberVO;

public class MemberDAOImpl implements IMemeberDAO {

	@Override
	public MemberVO selectMemberForAuth(String mem_id) {
		MemberVO member = null;
		StringBuffer sql = new StringBuffer();
		sql.append("SELECT MEM_ID, MEM_PASS, MEM_NAME, MEM_MAIL    ");
		sql.append("FROM MEMBER                                    ");
		sql.append("WHERE MEM_ID = ?");	// ? -> 쿼리 파라미터
		try(
			Connection conn = ConnectionFactory.getConnection();	
//			Statement stmt = conn.createStatement();
			PreparedStatement pstmt = conn.prepareStatement(sql.toString());
		){
			pstmt.setString(1, mem_id);
			ResultSet rs =  pstmt.executeQuery();
			if(rs.next()) {
				member = new MemberVO();
				member.setMem_id(rs.getString("MEM_ID"));
				member.setMem_pass(rs.getString("MEM_PASS"));
				member.setMem_name(rs.getString("MEM_NAME"));
				member.setMem_mail(rs.getString("MEM_MAIL"));
			}
			return member;
		}catch(SQLException e) {                                     
			throw new RuntimeException(e);
		}
	}

	@Override
	public MemberVO selectMemberDetail(String mem_id) {
		MemberVO member = null;
		StringBuffer sql = new StringBuffer();
		sql.append("SELECT                                                                   ");
	    sql.append("MEM_ID, MEM_PASS, MEM_NAME,                                              ");
	    sql.append("MEM_REGNO1, MEM_REGNO2, TO_CHAR(MEM_BIR, 'YYYY-MM-DD') MEM_BIR,          ");
	    sql.append("MEM_ZIP,    MEM_ADD1,    MEM_ADD2,                                       ");
	    sql.append("MEM_HOMETEL,    MEM_COMTEL,    MEM_HP,                                   ");
	    sql.append("MEM_MAIL,    MEM_JOB,    MEM_LIKE,                                       ");
	    sql.append("MEM_MEMORIAL,    TO_CHAR(MEM_MEMORIALDAY, 'YYYY-MM-DD') MEM_MEMORIALDAY, ");
	    sql.append("MEM_MILEAGE,	    MEM_DELETE                                           ");
	    sql.append("FROM MEMBER                                                              ");
	    sql.append("WHERE MEM_ID = ?");
		try(
			Connection conn = ConnectionFactory.getConnection();	
//			Statement stmt = conn.createStatement();
			PreparedStatement pstmt = conn.prepareStatement(sql.toString());
		){
			pstmt.setString(1, mem_id);
			ResultSet rs =  pstmt.executeQuery();
			if(rs.next()) {
				member = new MemberVO();
				member.setMem_id(rs.getString("MEM_ID"));
				member.setMem_pass(rs.getString("MEM_PASS"));
				member.setMem_name(rs.getString("MEM_NAME"));
				member.setMem_regno1(rs.getString("MEM_REGNO1"));
				member.setMem_regno2(rs.getString("MEM_REGNO2"));
				member.setMem_bir(rs.getString("MEM_BIR"));
				member.setMem_zip(rs.getString("MEM_ZIP"));
				member.setMem_add1(rs.getString("MEM_ADD1"));
				member.setMem_add2(rs.getString("MEM_ADD2"));
				member.setMem_hometel(rs.getString("MEM_HOMETEL"));
				member.setMem_comtel(rs.getString("MEM_COMTEL"));
				member.setMem_hp(rs.getString("MEM_HP"));
				member.setMem_mail(rs.getString("MEM_MAIL"));
				member.setMem_job(rs.getString("MEM_JOB"));
				member.setMem_like(rs.getString("MEM_LIKE"));
				member.setMem_memorial(rs.getString("MEM_MEMORIAL"));
				member.setMem_memorialday(rs.getString("MEM_MEMORIALDAY"));
				member.setMem_mileage(rs.getInt("MEM_MILEAGE"));
				member.setMem_delete(rs.getString("MEM_DELETE"));			}
			return member;
		}catch(SQLException e) {                                     
			throw new RuntimeException(e);
		}
	}

	@Override
	public int insertMember(MemberVO member) {
		int cnt = 0;
		StringBuffer sql = new StringBuffer();
		sql.append("INSERT INTO member (                               ");
		sql.append("	    mem_id, mem_pass, mem_name,                ");
		sql.append("	    mem_regno1, mem_regno2, mem_bir,           ");
		sql.append("	    mem_zip, mem_add1, mem_add2,               ");
		sql.append("	    mem_hometel, mem_comtel, mem_hp,           ");
		sql.append("	    mem_mail, mem_job, mem_like,               ");
		sql.append("	    mem_memorial, mem_memorialday, mem_mileage,");
		sql.append("	    mem_delete                                 ");
		sql.append("	) VALUES (                                     ");
		sql.append("	    ?, ?, ?,                             ");
		sql.append("	    ?, ?, ?,                             ");
		sql.append("	    ?, ?, ?,                             ");
		sql.append("	    ?, ?, ?,                           ");
		sql.append("	    ?, ?, ?,                          ");
		sql.append("	    ?, ?, ?,                          ");
		sql.append("	    ?                                      ");
		sql.append("	)                                              ");
		try(
				Connection conn = ConnectionFactory.getConnection();	
//				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(sql.toString());
			){
				pstmt.setString(1, member.getMem_id());
				pstmt.setString(2, member.getMem_pass());
				pstmt.setString(3, member.getMem_name());
				pstmt.setString(4, member.getMem_regno1());
				pstmt.setString(5, member.getMem_regno2());
				pstmt.setString(6, member.getMem_bir());
				pstmt.setString(7, member.getMem_zip());
				pstmt.setString(8, member.getMem_add1());
				pstmt.setString(9, member.getMem_add2());
				pstmt.setString(10, member.getMem_hometel());
				pstmt.setString(11, member.getMem_comtel());
				pstmt.setString(12, member.getMem_hp());
				pstmt.setString(13, member.getMem_mail());
				pstmt.setString(14, member.getMem_job());
				pstmt.setString(15, member.getMem_like());
				pstmt.setString(16, member.getMem_memorial());
				pstmt.setString(17, member.getMem_memorialday());
				pstmt.setInt(18, member.getMem_mileage());
				pstmt.setString(19, member.getMem_delete());
				
				cnt = pstmt.executeUpdate();
			
			}catch(SQLException e) {                                     
				throw new RuntimeException(e);
			}
		
		return 0;
	}

	@Override
	public int updateMember(MemberVO member) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int deleteMember(String mem_id) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public List<MemberVO> selectMemberList() {
		// TODO Auto-generated method stub
		return null;
	}

}
