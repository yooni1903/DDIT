/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.107
 * Generated at: 2021-03-04 05:57:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>member추가 폼 페이지</title>\r\n");
      out.write("<style>\r\n");
      out.write("  span{\r\n");
      out.write("  \tcolor : red;\r\n");
      out.write("  }\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath() );
      out.write("/js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  $(function(){\r\n");
      out.write("\t  // 회원 목록 버튼 클릭 처리\r\n");
      out.write("\t  $('#memListBtn').on('click', function(){\r\n");
      out.write("\t\t location.href=\"");
      out.print(request.getContextPath());
      out.write("/member/memberList.ddit\";\r\n");
      out.write("\t  });\r\n");
      out.write("\t  \r\n");
      out.write("\t  var chkMemId = \"\";\t// 중복체크할 때의 ID가 저장될 변수\r\n");
      out.write("\t  \r\n");
      out.write("\t  // 중복확인 버튼 클릭 처리\r\n");
      out.write("\t  $('#idCheck').on('click', function(){\r\n");
      out.write("\t\t  // 아이디 값을 일단 읽어와야 함\r\n");
      out.write("\t\t  var memId = $('#mem_id').val();\t// 입력한 회원ID 읽어오기\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  if(memId == \"\"){\r\n");
      out.write("\t\t\t  alert(\"회원ID를 입력하세요.\");\r\n");
      out.write("\t\t\t  $(\"#mem_id\").focus();\r\n");
      out.write("\t\t\t  return;\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  $.ajax({\r\n");
      out.write("\t\t\t \"url\" : \"");
      out.print(request.getContextPath());
      out.write("/member/memberIdCheck.ddit\",\r\n");
      out.write("\t\t\t \"method\" : \"post\",\r\n");
      out.write("\t\t\t \"data\" : {\"mem_id\" : memId},\r\n");
      out.write("\t\t\t \"dataType\" : \"json\",\r\n");
      out.write("\t\t\t \"success\" : function(result){\r\n");
      out.write("// \t\t\t\t alert(result);\r\n");
      out.write("\t\t\t\t if(result == \"OK\"){\r\n");
      out.write("\t\t\t\t\t $('#idChkResult').html(\"사용 가능 ID\");\r\n");
      out.write("\t\t\t\t\t chkMemId = memId;\r\n");
      out.write("\t\t\t\t }else{\r\n");
      out.write("\t\t\t\t\t $('#idChkResult').html(\"ID중복 - 사용불가\");\r\n");
      out.write("\t\t\t\t\t chkMemId = \"\";\r\n");
      out.write("\t\t\t\t }\r\n");
      out.write("\t\t\t },\r\n");
      out.write("\t\t\t \"error\" : function(xhr){\r\n");
      out.write("\t\t\t\t alert(\"오류 - 상태값 : \" + xhr.status);\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t  });\r\n");
      out.write("\t  });\r\n");
      out.write("\t  \r\n");
      out.write("\t  // 저장 버튼 클릭 ==> form이 submit될 때\r\n");
      out.write("\t  $('#memberForm').on(\"submit\", function(){\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  var memId = $(\"#mem_id\").val();\r\n");
      out.write("\t\t  var idChk = $(\"#idChkResult\").html().trim();\r\n");
      out.write("\t\t  if(chkMemId != memId || idChk != \"사용 가능 ID\"){\r\n");
      out.write("// \t\t\t  alert(\"ID가 중복되거나 변경되었습니다. 새로운 ID를 입력하세요.\")\r\n");
      out.write("\t\t\t  alert(\"ID중복체크를 해주세요.\");\r\n");
      out.write("\t\t\t  $('#mem_id').focus();\r\n");
      out.write("\t\t\t  return false;\t// submit상태에서 return false를 하면 서버로 전송을 취소한다.\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t  return true;\t// 서버로 전송 작업을 수행한다.\r\n");
      out.write("\t  });\r\n");
      out.write("\t  \r\n");
      out.write("\r\n");
      out.write("\t  \r\n");
      out.write("\r\n");
      out.write("  });\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <h2>회원 정보 입력 폼</h2>\r\n");
      out.write("  <form id=\"memberForm\" method=\"post\" action=\"");
      out.print(request.getContextPath() );
      out.write("/member/memberInsert.ddit\">\r\n");
      out.write("  <table border=\"1\">\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>회원ID</td>\r\n");
      out.write("      <td><input type=\"text\" name=\"mem_id\" id=\"mem_id\">\r\n");
      out.write("      \t<input type=\"button\" value=\"중복확인\" id=\"idCheck\"><br>\r\n");
      out.write("      \t<span id=\"idChkResult\"></span>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    \r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>회원이름</td>\r\n");
      out.write("      <td><input type=\"text\" name=\"mem_name\" id=\"mem_name\"></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    \r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>전화번호</td>\r\n");
      out.write("      <td><input type=\"text\" name=\"mem_tel\" id=\"mem_tel\"></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    \r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>회원주소</td>\r\n");
      out.write("      <td><input type=\"text\" name=\"mem_addr\" id=\"mem_addr\"></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    \r\n");
      out.write("    <tr>\r\n");
      out.write("      <td colspan=\"2\">\r\n");
      out.write("     \t  <input type=\"submit\" value=\"저장\">\r\n");
      out.write("     \t  <input type=\"reset\" value=\"취소\">\r\n");
      out.write("     \t  <input type=\"button\" value=\"회원목록\" id=\"memListBtn\">\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </table>\r\n");
      out.write("  </form>\r\n");
      out.write("  \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
